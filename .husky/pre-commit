#!/usr/bin/env bash
. "$(dirname -- "$0")/_/husky.sh"
. "$(dirname -- "$0")/husky-utils.sh"

echo ""
echo "[husky] Pre-commit hook activated"
echo "[info] Running tests, lint, secrets check, and wisdom..."
echo ""

timestamp=$(date +"%Y-%m-%d %H:%M:%S")
branch=$(git rev-parse --abbrev-ref HEAD)
author="$(git config user.name) <$(git config user.email)>"
commit_msg=$(git log -1 --pretty=format:"%s")

echo "--- COMMIT CONTEXT -----------------"
echo "Time:     $timestamp"
echo "Branch:   $branch"
echo "Author:   $author"
echo "Message:  $commit_msg"
echo "------------------------------------"
echo ""

# Step 1: Secret check
start_spinner "Checking for secrets in staged files"
if git diff --cached -- . ':(exclude).husky' | grep -Ei 'apikey|secret|password' >/dev/null; then
  abort_spinner "Secrets detected in staged files" || exit 1
else
  stop_spinner_with_output 0 "No secrets found" "" /dev/null || exit 1
fi

# Step 2: Run tests
start_spinner "Running tests"
tmp_out=$(mktemp)
if [ "$VERBOSE" = true ]; then
  npm run test 2>&1 | tee "$tmp_out"
else
  npm run test > "$tmp_out" 2>&1
fi
stop_spinner_with_output $? "Tests passed" "Tests failed" "$tmp_out" || exit 1

# Step 3: Run lint
start_spinner "Running lint-staged"
tmp_out=$(mktemp)
if [ "$VERBOSE" = true ]; then
  npx lint-staged 2>&1 | tee "$tmp_out"
else
  npx lint-staged > "$tmp_out" 2>&1
fi
stop_spinner_with_output $? "Lint passed" "Linting failed" "$tmp_out" || exit 1

echo "[done] All pre-commit checks passed."
